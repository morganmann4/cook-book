{"version":3,"sources":["data.js","Add.js","List.js","App.js","index.js"],"names":["questions","id","title","info","Add","handleSubmit","useState","recipeName","setRecipeName","ingredientList","setIngredientList","stepList","setStepList","className","type","placeholder","value","onChange","e","target","onClick","List","items","changeShowInfo","map","item","ingredients","steps","showInfo","key","App","data","addRecipe","setAddRecipe","ingredientAmount","setIngredientAmount","stepAmount","setStepAmount","recipeList","setRecipeList","addIngredient","addStep","console","log","newItem","Date","getTime","toString","length","class","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c00e84a1.chunk.js","sourcesContent":["const questions = [\r\n  {\r\n    id: 1,\r\n    title: 'Balsamic Chicken',\r\n    info:\r\n      'Unicorn vinyl poutine brooklyn, next level direct trade iceland. Shaman copper mug church-key coloring book, whatever poutine normcore fixie cred kickstarter post-ironic street art.',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Shepherds Pie',\r\n    info:\r\n      'Coloring book forage photo booth gentrify lumbersexual. Migas chillwave poutine synth shoreditch, enamel pin thundercats fashion axe roof party polaroid chartreuse.',\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Meatloaf',\r\n    info:\r\n      'Enamel pin fam sustainable woke whatever venmo. Authentic asymmetrical put a bird on it, lumbersexual activated charcoal kinfolk banjo cred pickled sartorial.',\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Orange Pasta',\r\n    info:\r\n      'Edison bulb direct trade gentrify beard lo-fi seitan sustainable roof party franzen occupy squid. Knausgaard cronut succulents, scenester readymade shabby chic lyft. Copper mug meh vegan gentrify.',\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Pot Roast',\r\n    info:\r\n      'Locavore franzen fashion axe live-edge neutra irony synth af tilde shabby chic man braid chillwave waistcoat copper mug messenger bag. Banjo snackwave blog, microdosing thundercats migas vaporware viral lo-fi seitan ',\r\n  },\r\n]\r\nexport default questions\r\n","import React, { useState } from 'react'\r\n\r\nconst Add = ( { handleSubmit }) => {\r\n\r\n    // const {name, setName} = useState(\"\")\r\n    const [recipeName, setRecipeName] = useState('')\r\n    const [ingredientList, setIngredientList] = useState([])\r\n    // const [ingredientName, setIngredientName] = useState('')\r\n    // const [portionList, setPortionList] = useState([])\r\n    const [stepList, setStepList] = useState([])\r\n    // const [stepName, setStepName] = useState('')\r\n  return (\r\n\r\n    <div className='add-recipe-form'>\r\n\r\n    <div className='input-recipe-container'>\r\n    <p className='input-label'>Recipe Name</p>\r\n    <input\r\n    type='text'\r\n    className='input-description'\r\n    placeholder='e.g. Pot Roast'\r\n    value={recipeName}\r\n    onChange={(e) => setRecipeName(e.target.value)} />\r\n    </div>\r\n\r\n    \r\n    <div className='input-recipe-container-ing'>\r\n    <p className='input-label'>Ingredients</p>\r\n    <input\r\n    type='text'\r\n    className='input-description-ing'\r\n    placeholder='e.g. 2 cups beef broth'\r\n    value={ingredientList}\r\n    onChange={(e) => setIngredientList(e.target.value)} />\r\n    </div>\r\n\r\n    {/* <p className='input-label'>Portion</p>\r\n    <input\r\n    type='text'\r\n    id=\"1\"\r\n    className='input-description-ing'\r\n    placeholder='e.g. 3 cups'\r\n    value={portionList}\r\n    onChange={(e) => setPortionList(e.target.value)} /> \r\n    </div> */}\r\n\r\n    {/* Step */}\r\n    <div className='input-recipe-container-step'>\r\n    <p className='input-label'>Steps</p>\r\n    <input\r\n    type='text'\r\n    className='input-description-step'\r\n    value={stepList}\r\n    onChange={(e) => setStepList(e.target.value)} />\r\n    </div>\r\n\r\n\r\n\r\n    <div className='submit-btn-container'>\r\n    <button type='submit' className='submit-btn' \r\n      onClick={() => handleSubmit(recipeName, ingredientList, stepList)}>Submit\r\n      </button>\r\n    </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Add","import React, { useState } from 'react';\r\nimport { AiOutlineMinus, AiOutlinePlus } from 'react-icons/ai';\r\n\r\nconst List = ({ items, changeShowInfo }) => {\r\n  return (\r\n    <div className=\"recipe-list\">\r\n      {items.map((item) => {\r\n        const { id, title, ingredients, steps, showInfo} = item;\r\n        return (\r\n          <article className=\"recipe-list-item\" key={id}>\r\n            <header>\r\n                <h3>{title}</h3>\r\n                <button className=\"show-info-btn\" onClick={() => changeShowInfo(id, showInfo)}>\r\n                {showInfo ? <AiOutlineMinus /> : <AiOutlinePlus />}\r\n                </button>\r\n            </header>\r\n            {item.showInfo && \r\n            <div>\r\n                <h4>Ingredients</h4>\r\n                <p>{ingredients}</p>\r\n                <h4>Steps</h4>                \r\n                <p>{steps}</p>\r\n            </div>}\r\n        </article>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { useState } from 'react';\r\nimport data from './data';\r\nimport SingleQuestion from './Question';\r\nimport Add from './Add';\r\nimport List from './List'\r\nfunction App() {\r\n\r\n  const [questions, setQuestions] = useState(data);\r\n  const [addRecipe, setAddRecipe] = useState(false);\r\n  const [ingredientAmount, setIngredientAmount] = useState(0)\r\n  const [stepAmount, setStepAmount] = useState(0)\r\n  const [recipeList, setRecipeList] = useState([])\r\n  const [newId, setNewID] = useState(0)\r\n\r\n  const addIngredientValue = () => {\r\n    setIngredientAmount(ingredientAmount + 1)\r\n  };\r\n\r\n  const addStepValue = () => {\r\n    setStepAmount(stepAmount + 1)\r\n  };\r\n\r\n\r\n  const handleRecipeSubmit = (recipeName, ingredientList, stepList) => {\r\n    // e.preventDefault(e);\r\n    console.log(recipeName, ingredientList, stepList)\r\n    const newItem = { id: new Date().getTime().toString(), title: recipeName, \r\n      ingredients: ingredientList, steps: stepList, showInfo: false };\r\n    setRecipeList([...recipeList, newItem]);\r\n    setAddRecipe(false)\r\n  };\r\n\r\n  const changeShowInfo = (id, showInfo) =>{\r\n    setRecipeList(\r\n      recipeList.map((item) => {\r\n        if (item.id === id) {\r\n          return { ...item, showInfo: !showInfo };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n\r\n }\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"container\">\r\n        <div className=\"top-content\">\r\n        <h1>Cook Book</h1>\r\n        <button className=\"add-btn\" onClick={() => setAddRecipe(!addRecipe)}>Add Recipe</button>\r\n        </div>\r\n        { addRecipe && <Add addIngredient={addIngredientValue} ingredientAmount={ingredientAmount} \r\n                            addStep={addStepValue} stepAmount={stepAmount} handleSubmit={handleRecipeSubmit}/> }\r\n        <section className=\"recipe-list-container\">\r\n        {recipeList.length < 1 ? <p>You dont have any recipes yet!</p> :\r\n        <div class=\"recipe-list-forum\">\r\n        <h2>Recipes</h2>\r\n        <List items={recipeList} changeShowInfo={changeShowInfo}/>\r\n        </div>}\r\n        </section>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n); \r\n"],"sourceRoot":""}